/**
 * @file VADC_GROUP_CONFIG.h
 * @date 2016-08-18
 *
 * NOTE:
 * This file is generated by DAVE-4. Any manual modification done to this file will be lost when the code is
 * regenerated.
 *
 * @cond
 ***********************************************************************************************************************
 * VADC_GROUP_CONFIG v4.0.6 - Configures a VADC group to convert channels.
 *
 * Copyright (c) 2015-2017, Infineon Technologies AG
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,are permitted provided that the
 * following conditions are met:
 *
 *   Redistributions of source code must retain the above copyright notice, this list of conditions and the  following
 *   disclaimer.
 *
 *   Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following
 *   disclaimer in the documentation and/or other materials provided with the distribution.
 *
 *   Neither the name of the copyright holders nor the names of its contributors may be used to endorse or promote
 *   products derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
 * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT  OF THE
 * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * To improve the quality of the software, users are encouraged to share modifications, enhancements or bug fixes
 * with Infineon Technologies AG (dave@infineon.com).
 ***********************************************************************************************************************
 *
 * Change History
 * --------------
 *
 * 2016-06-27:
 *     - Initial version for DAVEv4
 *
 * 2016-08-18:
 *     - Documentation update.<br>
 *
 * @endcond
 *
 */
/***********************************************************************************************************************
 * HEADER FILES
 **********************************************************************************************************************/
#ifndef VADC_GROUP_CONFIG_H
#define VADC_GROUP_CONFIG_H

#include "VADC_GLOBAL_CONFIG/vadc_global_config.h"
#include "vadc_group_config_conf.h"

/***********************************************************************************************************************
 * MACROS
 **********************************************************************************************************************/
#if (!((XMC_LIB_MAJOR_VERSION == 2U) && \
     (XMC_LIB_MINOR_VERSION >= 1U) && \
     (XMC_LIB_PATCH_VERSION >= 8U)))
#error "VADC_GROUP_CONFIG requires XMC Peripheral Library v2.1.8 or higher"
#endif

/***********************************************************************************************************************
 * ENUMS
 **********************************************************************************************************************/

/**
 * @ingroup VADC_GROUP_CONFIG_enumerations
 * @{
 */

/**@brief Return value of an API  */
typedef enum VADC_GROUP_CONFIG_STATUS
{
  VADC_GROUP_CONFIG_STATUS_SUCCESS = 0U,        /**< Indicates App initialization state successful */
  VADC_GROUP_CONFIG_STATUS_FAILURE       	 	/**< Unknown error */

} VADC_GROUP_CONFIG_STATUS_t;

/**
 * @}
 */

/***********************************************************************************************************************
 * DATA STRUCTURES
 **********************************************************************************************************************/

typedef VADC_GROUP_CONFIG_STATUS_t (*VADC_GROUP_CONFIG_func_ptr) (void);

/**
 * @ingroup VADC_GROUP_CONFIG_datastructures
 * @{
 */

/**
 * Structure to configure the channels
 */
typedef struct VADC_GROUP_CONFIG_CHANNEL
{
  const XMC_VADC_CHANNEL_CONFIG_t *ch_handle; /**< This holds the VADC Channel LLD structures*/

  const uint8_t ch_num;                       /**< This Holds the Channel Number*/

} VADC_GROUP_CONFIG_CHANNEL_t;

/**
 * Structure to configure the channels
 */
typedef struct VADC_GROUP_CONFIG_RESULT_REGISTER
{
  const XMC_VADC_RESULT_CONFIG_t *res_handle; /**< This holds the VADC Result Register LLD structures*/

  const uint8_t res_reg_num;                       /**< This Holds the Result Register Number*/

} VADC_GROUP_CONFIG_RESULT_REGISTER_t;

/**
 * @brief config structure
 */
typedef struct VADC_GROUP_CONFIG
{
  VADC_GROUP_CONFIG_func_ptr init_func; /**< Function pointer to configure a VADC Group */
#if XMC_VADC_GROUP_AVAILABLE == 1U
  XMC_VADC_GROUP_t *const group_ptr;    /**< VADC Group ptr */
#endif

  XMC_VADC_GLOBAL_t *const module_ptr;   /**< VADC Module ptr */
} VADC_GROUP_CONFIG_t;

/**
 * @}
 */

/***********************************************************************************************************************
 * API Prototypes
 **********************************************************************************************************************/
#ifdef __cplusplus
extern "C" {
#endif
/**
 * @ingroup VADC_GROUP_CONFIG_apidoc
 * @{
 */

/**
 * @brief Get the VADC_GROUP_CONFIG APP version.
 * @return DAVE_APP_VERSION_t APP version information (major, minor and patch number)
 *
 * Example Usage:
 * @code

 *  @endcode
 */
DAVE_APP_VERSION_t VADC_GROUP_CONFIG_GetAppVersion(void);

/**
 * @brief Function to initialize the SPI module as per the configuration made
 * in GUI.
 * @param handle Pointer to static content of APP configuration.
 * @return VADC_GROUP_CONFIG_STATUS_t: Status of the SPI driver initialization.\n
 *   @ref VADC_GROUP_CONFIG_STATUS_SUCCESS - on successful initialization.\n
 *   @ref VADC_GROUP_CONFIG_STATUS_FAILURE - if initialization fails.\n
 *
 * \par<b>Description:</b><br>
 * This function configures USIC registers based on the settings provided in the GUI.
 * <BR>
 *
 * Example Usage:
 * @code
 *   #include <DAVE.h>   // Declarations from DAVE Code Generation (includes SFR declaration)
 *
 *   int main(void)
 *   {
 *     VADC_GROUP_CONFIG_STATUS_t init_status;
 *
 *     init_status = (VADC_GROUP_CONFIG_STATUS_t)VADC_GROUP_CONFIG_Init(&VADC_GROUP_CONFIG_0);
 *     if(init_status == VADC_GROUP_CONFIG_STATUS_SUCCESS)
 *     {
 *         while(1U)
 *         {
 *         }
 *     }
 *     else
 *     {
 *      XMC_DEBUG("main: Application initialization failed");
 *      while(1U)
 *      {
 *      }
 *     }
 *      return 1U;
 *  }
 *  @endcode
 */
VADC_GROUP_CONFIG_STATUS_t VADC_GROUP_CONFIG_Init(const VADC_GROUP_CONFIG_t *const handle);

/**
 * @}
 */

/* Include App extern declaration file */
#include "vadc_group_config_extern.h"

#ifdef __cplusplus
}
#endif

#endif /* VADC_GROUP_CONFIG_H */
